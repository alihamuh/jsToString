{"version":3,"file":"javascripttostring.es5.js","sources":["../src/javascripttostring.ts"],"sourcesContent":["import getObjectType from \"get-internal-type\";\r\n\r\nexport interface IJ2SOptions {\r\n  includeFunctionPrototype?: boolean;\r\n  includeFunctionProperties?: boolean;\r\n}\r\n\r\n/**\r\n * Converts to string the value, if it wasn't before\r\n * @param value the value, that converts to string\r\n * @param references the references to stringified objects\r\n */\r\nfunction stringify(\r\n  value: any,\r\n  options: IJ2SOptions,\r\n  references?: any[]\r\n): string {\r\n  let referenceValues: any[] = references || [value];\r\n  switch (getObjectType(value)) {\r\n    case \"undefined\":\r\n      return \"undefined\";\r\n    case \"null\":\r\n      return \"null\";\r\n    case \"boolean\":\r\n    case \"regexp\":\r\n      return String(value);\r\n    case \"string\":\r\n      return JSON.stringify(value);\r\n    case \"number\":\r\n      if (Number.isNaN(value)) {\r\n        return \"Number.NaN\";\r\n      }\r\n      switch (value) {\r\n        case Number.POSITIVE_INFINITY:\r\n          return \"Number.POSITIVE_INFINITY\";\r\n        case Number.NEGATIVE_INFINITY:\r\n          return \"Number.NEGATIVE_INFINITY\";\r\n        case Number.EPSILON:\r\n          return \"Number.EPSILON\";\r\n        case Number.MAX_SAFE_INTEGER:\r\n          return \"Number.MAX_SAFE_INTEGER\";\r\n        case Number.MIN_SAFE_INTEGER:\r\n          return \"Number.MIN_SAFE_INTEGER\";\r\n        case Number.MAX_VALUE:\r\n          return \"Number.MAX_VALUE\";\r\n        case Number.MIN_VALUE:\r\n          return \"Number.MIN_VALUE\";\r\n        default:\r\n          return String(value);\r\n      }\r\n    case \"bigint\":\r\n      return `BigInt(${value})`;\r\n    case \"symbol\":\r\n      switch (value) {\r\n        case Symbol.asyncIterator:\r\n        case Symbol.hasInstance:\r\n        case Symbol.isConcatSpreadable:\r\n        case Symbol.iterator:\r\n        case Symbol.match:\r\n        case Symbol.prototype:\r\n        case Symbol.replace:\r\n        case Symbol.search:\r\n        case Symbol.species:\r\n        case Symbol.split:\r\n        case Symbol.toPrimitive:\r\n        case Symbol.toStringTag:\r\n        case Symbol.unscopables:\r\n          return value.description;\r\n        default:\r\n          let description = value.description ? `\"${value.description}\"` : \"\";\r\n          return `Symbol(${description})`;\r\n      }\r\n    case \"date\":\r\n      if (isNaN(value.getTime())) {\r\n        return `new Date(${value.toString()})`;\r\n      }\r\n      return `new Date(${value.toISOString()})`;\r\n    case \"error\":\r\n      let message = JSON.stringify(value.message),\r\n        fileName = JSON.stringify(value.fileName),\r\n        lineNumber = JSON.stringify(value.lineNumber);\r\n      return `new Error(${message}, ${fileName}, ${lineNumber})`;\r\n    case \"array\":\r\n      if (value.length === 0) return \"[]\";\r\n      value[0] = strignifyRef(value[0], options, referenceValues);\r\n      let arrayValues = value.reduce(\r\n        (x1: any, x2: any) =>\r\n          `${x1}, ${strignifyRef(x2, options, referenceValues)}`\r\n      );\r\n      return `[${arrayValues}]`;\r\n    case \"set\":\r\n      let setValues: string[] = [];\r\n\r\n      value.forEach((value1: any, value2: any, set: Set<any>) => {\r\n        setValues.push(strignifyRef(value2, options, referenceValues));\r\n      });\r\n\r\n      if (setValues.length === 0) return \"new Set()\";\r\n\r\n      return `new Set([${setValues.join(\", \")}])`;\r\n    case \"map\":\r\n      let mapValues: string[] = [];\r\n\r\n      value.forEach((indexValue: any, key: any) => {\r\n        mapValues.push(\r\n          `[${strignifyRef(key, options, referenceValues)}, ${strignifyRef(\r\n            indexValue,\r\n            options,\r\n            referenceValues\r\n          )}]`\r\n        );\r\n      });\r\n\r\n      if (mapValues.length === 0) return \"new Map()\";\r\n\r\n      return `new Map([${mapValues.join(\", \")}])`;\r\n    case \"object\":\r\n      let objectValues = [];\r\n\r\n      for (let propertyName in value) {\r\n        if (value.hasOwnProperty(propertyName))\r\n          objectValues.push(\r\n            `${propertyName}: ${strignifyRef(\r\n              value[propertyName],\r\n              options,\r\n              referenceValues\r\n            )}`\r\n          );\r\n      }\r\n\r\n      if (objectValues.length === 0) return \"{}\";\r\n\r\n      return `{\\n${objectValues.join(\",\\n\")}\\n}`;\r\n    case \"function\":\r\n      let functionName = value.name || \"anonymousFunction\";\r\n      let functionObject = \"\";\r\n      let functionPrototype = \"\";\r\n\r\n      if (options.includeFunctionProperties) {\r\n        for (let propertyName in value) {\r\n          if (value.hasOwnProperty(propertyName))\r\n            functionObject += `${functionName}.${propertyName} = ${strignifyRef(\r\n              value[propertyName],\r\n              options,\r\n              referenceValues\r\n            )};\\n`;\r\n        }\r\n      }\r\n\r\n      if (options.includeFunctionPrototype) {\r\n        for (let propertyName in value.prototype) {\r\n          if (value.prototype.hasOwnProperty(propertyName))\r\n            functionObject += `${functionName}.prototype.${propertyName} = ${strignifyRef(\r\n              value.prototype[propertyName],\r\n              options,\r\n              referenceValues\r\n            )};\\n`;\r\n        }\r\n      }\r\n\r\n      if (!functionObject && !functionPrototype) {\r\n        return String(value);\r\n      }\r\n      return `(function(){\\n var ${functionName} = ${String(\r\n        value\r\n      )};\\n ${functionObject}\\n ${functionPrototype}\\n return ${functionName};\\n}())`;\r\n    default:\r\n      return JSON.stringify(value);\r\n  }\r\n}\r\n\r\n/**\r\n * Stringify the value, if it wasn't before\r\n * @param value the value, that converts to string\r\n * @param references the references to stringified objects\r\n */\r\nfunction strignifyRef(\r\n  value: any,\r\n  options: IJ2SOptions,\r\n  references: any[]\r\n): string {\r\n  if (references.indexOf(value) < 0) {\r\n    let referencesLength = references.length;\r\n    references.push(value);\r\n    let refString = stringify(value, options, references);\r\n    references.splice(referencesLength);\r\n    return refString;\r\n  }\r\n  return \"null\";\r\n}\r\n\r\n/**\r\n * Converts JavaScript value to string\r\n * @param value the value of any type\r\n * @param options [optional] The options of conversion\r\n */\r\nfunction javaScriptToString(value: any, options?: IJ2SOptions): string {\r\n  let opt: IJ2SOptions = options || {};\r\n  if (opt.includeFunctionProperties === undefined)\r\n    opt.includeFunctionProperties = true;\r\n  if (opt.includeFunctionPrototype === undefined)\r\n    opt.includeFunctionPrototype = true;\r\n\r\n  return stringify(value, opt);\r\n}\r\n\r\nexport default javaScriptToString;\r\n"],"names":["getObjectType"],"mappings":"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"}